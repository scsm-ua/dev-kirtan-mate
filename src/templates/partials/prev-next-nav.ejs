<div class="PrevNextNav">
    <link rel="stylesheet" href="<%= paths.toCss %>/partials/prev-next-nav.css" />

    <div class="PrevNextNav__container">
        <div class="PrevNextNav__content">
            <a class="PrevNextNav__link PrevNextNav__link--prev" href="">
                <span class="PrevNextNav__icon PrevNextNav__icon--prev">
                    <span class="icon-chevron-right"></span>
                </span>

                <span class="PrevNextNav__label ellipsis"></span>
            </a>

            <a class="PrevNextNav__link PrevNextNav__link--next" href="">
                <span class="PrevNextNav__label ellipsis"></span>

                <span class="PrevNextNav__icon PrevNextNav__icon--next">
                    <span class="icon-chevron-right"></span>
                </span>
            </a>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/swiped-events/1.1.9/swiped-events.min.js" integrity="sha512-Km1M9MRIhy+uzmSn7MU2G0fQawFMpfpScHpf0UUvcpkGJCJhwlTRF/mbTUimo1N9woYZ5RLES7iL+kp65Q1d0Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        (function() {
            try {
                const orderedSongs = <%- orderedSongs %>;
                const prevLink = document.querySelector('.PrevNextNav__link--prev');
                const nextLink = document.querySelector('.PrevNextNav__link--next');

                const currentSongIndex = orderedSongs.findIndex((item) =>
                    window.location.pathname.includes(item.fileName)
                );

                if (currentSongIndex === 0) {
                    prevLink.removeAttribute('href');
                    prevLink.classList.add('PrevNextNav__link--disabled');
                } else {
                    const title = orderedSongs[currentSongIndex - 1].name;
                    prevLink.setAttribute('href', orderedSongs[currentSongIndex - 1].fileName);
                    prevLink.title = title;
                    prevLink.querySelector('.PrevNextNav__label').innerText = title;
                }

                if (currentSongIndex === orderedSongs.length - 1) {
                    nextLink.removeAttribute('href');
                    nextLink.classList.add('PrevNextNav__link--disabled');
                } else {
                    const title = orderedSongs[currentSongIndex + 1].name;
                    nextLink.setAttribute('href', orderedSongs[currentSongIndex + 1].fileName);
                    nextLink.title = title;
                    nextLink.querySelector('.PrevNextNav__label').innerText = title;
                }

                /**
                 * Swipe events.
                 */
                document.addEventListener('swiped-left', () => {
                    if (currentSongIndex !== orderedSongs.length - 1)
                        window.location.href = orderedSongs[currentSongIndex + 1].fileName
                });

                document.addEventListener('swiped-right', () => {
                    if (currentSongIndex !== 0)
                        window.location.href = orderedSongs[currentSongIndex - 1].fileName
                });

            } catch (e) {
                window.console.error(e);
            }
        } ())
    </script>
</div>
